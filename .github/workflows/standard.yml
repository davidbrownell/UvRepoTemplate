name: "Standard"

run-name: ${{ github.run_number }} [${{ github.actor }}] on ${{ github.ref_name }}

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Once a day at 12am UTC
  workflow_dispatch:

permissions: {}

# BugBug: Invoke prolog scripts
# BugBug: Invoke epilog scripts

jobs:
  # BugBug: https://github.com/orgs/community/discussions/11692#discussioncomment-2233606


  # BugBug # ----------------------------------------------------------------------
  # BugBug validate:
  # BugBug   strategy:
  # BugBug     fail-fast: false
  # BugBug
  # BugBug     matrix:
  # BugBug       os:
  # BugBug         - macos-latest
  # BugBug         - ubuntu-latest
  # BugBug         - windows-latest
  # BugBug
  # BugBug       python_version:
  # BugBug         - "3.13"
  # BugBug         - "3.12"
  # BugBug         - "3.11"
  # BugBug         - "3.10"
  # BugBug
  # BugBug   name: Validate
  # BugBug   runs-on: ${{ matrix.os }}
  # BugBug
  # BugBug   permissions:
  # BugBug     contents: read
  # BugBug
  # BugBug   steps:
  # BugBug     - uses: actions/checkout@v4
  # BugBug
  # BugBug     - name: Install uv and python
  # BugBug       uses: astral-sh/setup-uv@v5
  # BugBug       with:
  # BugBug         python-version: ${{ matrix.python_version }}
  # BugBug         enable-cache: true
  # BugBug
  # BugBug     - name: Install Dependencies
  # BugBug       run: uv sync
  # BugBug
  # BugBug     - name: Validate Formatting
  # BugBug       run: uv run ruff format --check --verbose
  # BugBug
  # BugBug     - name: Validate Linting
  # BugBug       run: uv run ruff check --verbose
  # BugBug
  # BugBug     - name: Validate Tests
  # BugBug       run: uv run pytest
  # BugBug       env:
  # BugBug         COVERAGE_FILE: .coverage.${{ matrix.os }}.${{ matrix.python_version }}
  # BugBug
  # BugBug     - name: Upload Coverage Data
  # BugBug       uses: actions/upload-artifact@v4
  # BugBug       with:
  # BugBug         name: .coverage.${{ matrix.os }}.${{ matrix.python_version }}
  # BugBug         path: .coverage.${{ matrix.os }}.${{ matrix.python_version }}
  # BugBug         include-hidden-files: true
  # BugBug
  # BugBug # ----------------------------------------------------------------------
  # BugBug package_coverage:
  # BugBug   needs: validate
  # BugBug
  # BugBug   name: Postprocess Coverage Info
  # BugBug   runs-on: ubuntu-latest
  # BugBug
  # BugBug   permissions:
  # BugBug     contents: read
  # BugBug
  # BugBug   steps:
  # BugBug     - uses: actions/checkout@v4
  # BugBug
  # BugBug     - name: Install uv and python
  # BugBug       uses: astral-sh/setup-uv@v5
  # BugBug       with:
  # BugBug         enable-cache: true
  # BugBug
  # BugBug     - name: Install Dependencies
  # BugBug       run: uv sync
  # BugBug
  # BugBug     - name: Download Coverage Data
  # BugBug       uses: actions/download-artifact@v4
  # BugBug       with:
  # BugBug         merge-multiple: true
  # BugBug
  # BugBug     - name: Combine Coverage Data
  # BugBug       shell: bash
  # BugBug       run: |
  # BugBug         uv run coverage combine .
  # BugBug         uv run coverage report --ignore-errors --show-missing --skip-covered
  # BugBug         uv run coverage json --ignore-errors -o .coverage.json
  # BugBug
  # BugBug         export TOTAL=$(uv run python -c "import json;print(json.load(open('.coverage.json'))['totals']['percent_covered_display'])")
  # BugBug         echo "coverage_total=$TOTAL" >> $GITHUB_ENV
  # BugBug         echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
  # BugBug
  # BugBug     - name: Upload Coverage Data
  # BugBug       uses: actions/upload-artifact@v4
  # BugBug       with:
  # BugBug         name: .coverage.json
  # BugBug         path: .coverage.json
  # BugBug         include-hidden-files: true

  # ----------------------------------------------------------------------
  python_package:
    # BugBug needs: package_coverage

    name: Build Python Package
    runs-on: ubuntu-latest

    outputs:
      package_name: ${{ steps.package_name_and_version.outputs.package_name }}
      package_version: ${{ steps.package_name_and_version.outputs.package_version }}

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv and python
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: "3.10"

      - name: Install Dependencies
        run: uv sync

      - name: Update Version
        run: uv run python -m AutoGitSemVer.scripts.UpdatePythonVersion ./src/uvrepotemplate/__init__.py ./src --verbose

      - name: Build Python Package
        run: uv build

      - name: Save Package Name and Version
        id: package_name_and_version
        run: |-
          cd dist

          export PACKAGE_NAME=$(ls *.whl)
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

          export PACKAGE_VERSION=$(uv run python -c "import uvrepotemplate as package; print(package.__version__)")
          echo "package_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

      - name: Upload Python Package
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/**

  # BugBug # ----------------------------------------------------------------------
  # BugBug validate_python_package:
  # BugBug   needs: python_package
  # BugBug
  # BugBug   strategy:
  # BugBug     fail-fast: false
  # BugBug
  # BugBug     matrix:
  # BugBug       os:
  # BugBug         - macos-latest
  # BugBug         - ubuntu-latest
  # BugBug         - windows-latest
  # BugBug
  # BugBug       python_version:
  # BugBug         - "3.13"
  # BugBug         - "3.12"
  # BugBug         - "3.11"
  # BugBug         - "3.10"
  # BugBug
  # BugBug   name: Validate Python Package
  # BugBug   runs-on: ${{ matrix.os }}
  # BugBug
  # BugBug   env:
  # BugBug     PACKAGE_NAME: ${{ needs.python_package.outputs.package_name }}
  # BugBug     PACKAGE_VERSION: ${{ needs.python_package.outputs.package_version }}
  # BugBug
  # BugBug   permissions: {}
  # BugBug
  # BugBug   steps:
  # BugBug     - name: Install uv and python
  # BugBug       uses: astral-sh/setup-uv@v5
  # BugBug       with:
  # BugBug         python-version: ${{ matrix.python_version }}
  # BugBug         enable-cache: false
  # BugBug
  # BugBug     - name: Download Python Package
  # BugBug       uses: actions/download-artifact@v4
  # BugBug       with:
  # BugBug         name: python-package
  # BugBug         path: stage
  # BugBug
  # BugBug     - name: Install Python Package
  # BugBug       run: uv pip install stage/${{ env.PACKAGE_NAME }}
  # BugBug
  # BugBug     - name: Validate Python Package
  # BugBug       run: uv run python -c "import uvrepotemplate as package; assert package.__version__ == '${{ env.PACKAGE_VERSION }}', package.__version__"

  # ----------------------------------------------------------------------
  release:
    needs: python_package # BugBug [python_package, validate_python_package]

    name: Release
    runs-on: ubuntu-latest

    env:
      PACKAGE_NAME: ${{ needs.python_package.outputs.package_name }}
      PACKAGE_VERSION: ${{ needs.python_package.outputs.package_version }}

    steps:
      - uses: actions/checkout@v4

      - name: Has Release Changes?
        id: has_release_changes
        uses: dorny/paths-filter@v3
        with:
          filters: ./.github/release_sources.yaml

      - name: Release
        uses: ./.github/actions/release_impl
        # BugBug if: ${{ github.envent_name == 'push' && github.ref == 'refs/heads/main' && steps.has_release_changes.outputs.src == 'true' }}
        if: ${{ steps.has_release_changes.outputs.src == 'true' }}
